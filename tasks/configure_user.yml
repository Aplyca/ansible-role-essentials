---
- debug: msg="Configuring  {{ user.name }}"
  tags: always

- name: Make sure that the .ssh directory exists
  become: yes
  become_user: "{{ user.name }}"
  file:
    path: "~/.ssh"
    state: directory
    mode: 0700
  when: user.ssh is defined
  tags:
    - key_pairs
    - copy_keys
    - authorized_keys
    - configure_users

- name: Set up authorized_keys
  become: yes
  authorized_key:
    user: "{{ user.name }}"
    key: "{{ item }}"
  with_items: "{{ user.ssh.authorized_keys | default([]) }}"
  when: user.ssh is defined
  tags:
    - authorized_keys
    - configure_users

- name: Make sure SSH config is present
  become: yes
  become_user: "{{ user.name }}"
  template:
    src: config.j2
    dest: ~/.ssh/config
    mode: 0600
  changed_when: False
  when: user.ssh is defined and user.ssh.config is defined
  tags:
    - ssh_config
    - configure_users

- name: Add private ssh keys to remote user
  become: yes
  become_user: "{{ user.name }}"
  copy:
    content: "{{ item.private }}"
    dest: "~/.ssh/{{ item.name }}"
    mode: 0400
  with_items: "{{ user.ssh.copy_keys | default([]) }}"
  no_log: True
  when: user.ssh is defined
  tags:
    - copy_keys
    - configure_users

- name: Add public ssh keys to remote user
  become: yes
  become_user: "{{ user.name }}"
  copy:
    content: "{{ item.public }}"
    dest: "~/.ssh/{{ item.name }}"
    mode: 0400
  with_items: "{{ user.ssh.copy_keys | default([]) }}"
  no_log: True
  when: user.ssh is defined and item.public is defined
  tags:
    - copy_keys
    - configure_users

- name: Create SSH key pair in remote user
  become: yes
  user:
    name: "{{ user.name }}"
    generate_ssh_key: yes
    ssh_key_bits: "{{ item.bits | default('4096') }}"
    ssh_key_file: ".ssh/{{ item.name | default(user.name) }}"
    ssh_key_comment: "{{ item.comment | default(user.name) }}"
  with_items: "{{ user.ssh.key_pairs | default([]) }}"
  when: user.ssh is defined
  tags:
    - key_pairs
    - configure_users

- name: Make sure Git config is present
  become: yes
  become_user: "{{ user.name }}"
  git_config:
    name: "{{ item.key }}"
    scope: global
    value: "{{ item.value }}"
  with_dict: "{{ user.git_config | default({}) }}"
  tags:
    - git_config
    - configure_users

- name: Updating crontab
  become: yes
  become_user: "{{ user.name }}"
  cron:
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    job: "cd {{ item.root | default('~') }} && {{ item.job }}"
    hour: "{{ item.hour | default('*') }}"
    minute: "{{ item.minute | default('*') }}"
    weekday: "{{ item.weekday | default('*') }}"
  with_items: "{{ user.crontab | default([]) }}"
  tags:
    - crontab
    - configure_users

- name: Add directory to path
  become: yes
  become_user: "{{ user.name }}"
  lineinfile:
    dest: "~/.profile"
    line: 'if [ -d "{{ item }}" ]; then PATH="$PATH:{{ item | expanduser }}"; fi'
    state: present
  with_items: "{{ user.paths | default([])  }}"
  tags:
    - paths
    - configure_users
